import React, { Component } from 'react';
import './App.css';
import {BootstrapTable, TableHeaderColumn	} from 'react-bootstrap-table';

class App extends Component {
	constructor(props) {
		super(props);

		this.state = {
			products: []
		}

		setTimeout(()=>{
			let products = [];
			for(let i=0;i<30; i++){
				let id = ++this.idIterator;
				products.push({ id , name: `Product ${id}`, price: id*10 })
			}
			this.setState({ products });
		},1000)
	}

	idIterator = 0;

	onAfterInsertRow = (row) => {
		console.log('The new row is:', JSON.stringify(row));

		setTimeout(()=>{ /* fake request to DB */

			let products = this.state.products.slice(0);

			/*
				The key was autogenerated by BootstrapTable,
				so we want to replace the autogenerated ID with the one in the DB
			*/
			products.push({
				id: ++this.idIterator, name:row.name, price:row.price
			});
			this.setState({ products });

		},1000);
	}


	onAfterDeleteRow = (rowKeys) => {
		console.log('The rowkey you drop:', rowKeys);
		let products = this.state.products.slice(0);
		products = products.filter( p => !rowKeys.includes(p.id) )
		this.setState({ products })
	}

	render() {
		const options = {
			afterInsertRow: this.onAfterInsertRow, // A hook for after insert rows
			afterDeleteRow: this.onAfterDeleteRow,	// A hook for after droping rows.
		};
		const selectRowProp = {
			mode: 'checkbox'
		};
		return (
			<div className="App">
				<BootstrapTable data={this.state.products}
					insertRow
					deleteRow
					pagination
					selectRow={ selectRowProp }
					options={ options }
					striped
					hover
					>
					<TableHeaderColumn
							isKey
							dataField='id'
							autoValue
						>Product ID</TableHeaderColumn>
					<TableHeaderColumn dataField='name'>Product Name</TableHeaderColumn>
					<TableHeaderColumn dataField='price'>Product Price</TableHeaderColumn>
				</BootstrapTable>

				<h3>Products <small>Keep an eye on <code>state.products</code></small></h3>
				{this.state.products.map( p=> {
					return <div key={p.id}><b>{p.id}</b><span>: {p.name} ${p.price}</span></div>
				})}
			</div>
		);
	}
}

export default App;
